{"version":3,"sources":["components/NavBar/NavBar.tsx","assets/chuck-approves.png","components/ChuckJoke/ChuckJoke.tsx","views/joke/Joke.tsx","shared/Button/Button.tsx","assets/chuck-jokes-logo.svg","assets/back-icon.svg","shared/Svg/Svg.tsx","shared/Wrapper/Wrapper.tsx"],"names":["CategoriesList","category","className","to","ROUTES","HOME","Button","label","layout","ChuckJoke","joke","src","ChuckApproves","alt","Joke","useParams","useSelector","state","data","error","loading","dispatch","useDispatch","handleJoke","useCallback","JokeActions","useEffect","Wrapper","NavBar","Loading","onClick","addClass","type","Intro","img","ChuckLogo","BackIcon","children","compClass"],"mappings":"yMA0BeA,G,MAdyB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzC,OACE,sBAAKC,UAAU,cAAf,UACE,cAAC,IAAD,CAAMC,GAAKC,IAAOC,KAAlB,SACE,cAACC,EAAA,EAAD,CAAQC,MAAO,aAAcC,OAAQ,WAGvC,oBAAIN,UAAU,wBAAd,SACID,SCpBK,MAA0B,2CCqB1BQ,G,MAZoB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpC,OACE,0BAASR,UAAU,iBAAnB,UACE,qBAAKA,UAAU,2BAA2BS,IAAMC,EAAgBC,IAAI,QAEpE,4BAAYX,UAAU,wBAAtB,SACE,iCAAQ,4BAAKQ,aC2CNI,UAzCF,WAAO,IACVb,EAAac,cAAbd,SADS,EAGgBe,aAAa,SAACC,GAAD,OAA6BA,EAAMP,QAAzEQ,EAHS,EAGTA,KAAMC,EAHG,EAGHA,MAAOC,EAHJ,EAGIA,QAEfC,EAAWC,cAEXC,EAAaC,uBAAY,kBAAMH,EAASI,IAAwBxB,MAAY,CAChFoB,EACApB,IAOF,OAJAyB,qBAAU,WACRH,MACC,CAACA,IAEAJ,EACF,wCAIA,eAACQ,EAAA,EAAD,CAASzB,UAAY,YAArB,UACE,cAAC0B,EAAD,CAAQ3B,SAAUA,IAGhBmB,EACI,cAACS,EAAA,EAAD,IAEA,qCACE,cAAC,EAAD,CAAWnB,KAAMQ,IAEjB,qBAAKhB,UAAU,yBAAf,SACE,cAACI,EAAA,EAAD,CAAQwB,QAASP,EAAYhB,MAAQ,iBAAmBC,OAAQ,wB,gEC3BjEF,IAXiB,SAAC,GAAgC,IAA9BwB,EAA6B,EAA7BA,QAASvB,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAC3CuB,EAAavB,EAAF,sBAA0BA,GAAW,sBAEtD,OACE,yBAAQN,UAAS,qBAAgB6B,GAAYD,QAASA,EAAtD,UACe,SAAXtB,GAAqB,cAAC,IAAD,CAAKwB,KAAO,OAASnB,IAAMN,IAChDA,O,2CCjBO,G,KAAA,IAA0B,8CCA1B,MAA0B,sCCoC1B0B,IA1BgB,SAAC,GAAmB,IAAjBD,EAAgB,EAAhBA,KAAMnB,EAAU,EAAVA,IAClCqB,EAAM,KAEV,OAAQF,GACN,IAAK,OACHE,EAAMC,EACN,MAEF,IAAK,OACHD,EAAME,EAOV,OAAKF,EAGH,qBACEvB,IAAMuB,EACNrB,IAAMA,IALQ,O,sDCRLc,IAVkB,SAAC,GAA6B,IAA3BU,EAA0B,EAA1BA,SAAUnC,EAAgB,EAAhBA,UACtCoC,EAAS,sBAAoBpC,GAAwB,IAE3D,OACE,sBAAMA,UAAYoC,EAAlB,SACID,M","file":"static/js/4.13d58111.chunk.js","sourcesContent":["import React  from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { ROUTES } from '../../routes'\r\n\r\nimport Button from '../../shared/Button/Button';\r\n\r\nimport './NavBar.style.scss';\r\n\r\ninterface Props {\r\n  category: string\r\n}\r\n\r\nconst CategoriesList: React.FC<Props> = ({ category }) => {\r\n  return (\r\n    <nav className=\"app-nav-bar\">\r\n      <Link to={ ROUTES.HOME }>\r\n        <Button label={'Categories'} layout={'back'} />\r\n      </Link>\r\n\r\n      <h1 className=\"app-nav-bar__category\">\r\n        { category }\r\n      </h1>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default CategoriesList;\r\n","export default __webpack_public_path__ + \"static/media/chuck-approves.22b8c7b2.png\";","import React  from 'react';\r\n\r\nimport ChuckApproves from '../../assets/chuck-approves.png';\r\nimport './ChuckJoke.style.scss';\r\n\r\ninterface Props {\r\n  joke: string[]\r\n}\r\n\r\nconst ChuckJoke: React.FC<Props> = ({ joke }) => {\r\n  return (\r\n    <section className=\"app-chuck-joke\">\r\n      <img className=\"app-chuck-joke__approves\" src={ ChuckApproves } alt=\"Yes\" />\r\n\r\n      <blockquote className=\"app-chuck-joke__quote\">\r\n        <strong><i>{ joke }</i></strong>\r\n      </blockquote>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ChuckJoke;\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { useParams }                     from \"react-router\";\r\nimport { useSelector, useDispatch }      from \"react-redux\";\r\n\r\nimport { ApplicationState }              from '../../store';\r\nimport * as JokeActions                  from '../../store/modules/joke/Joke.actions'\r\n\r\nimport Button    from '../../shared/Button/Button';\r\nimport Wrapper   from '../../shared/Wrapper/Wrapper';\r\nimport Loading   from '../../shared/Loading/Loading';\r\nimport NavBar    from '../../components/NavBar/NavBar';\r\nimport ChuckJoke from '../../components/ChuckJoke/ChuckJoke';\r\n\r\ninterface ParamTypes {\r\n  category: string\r\n}\r\n\r\nconst Joke = () => {\r\n  const { category } = useParams<ParamTypes>();\r\n\r\n  const { data, error, loading } = useSelector( (state: ApplicationState) => state.joke );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleJoke = useCallback(() => dispatch(JokeActions.loadRequest(category)), [\r\n    dispatch,\r\n    category\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    handleJoke();\r\n  }, [handleJoke]);\r\n\r\n  if( error ) return (\r\n    <div>Error</div>\r\n  )\r\n\r\n  return (\r\n    <Wrapper className={ 'page-joke' }>\r\n      <NavBar category={category} />\r\n      \r\n      { \r\n        loading\r\n          ? <Loading />\r\n          : (\r\n            <>\r\n              <ChuckJoke joke={data} />\r\n\r\n              <div className=\"page-joke__btn-wrapper\">\r\n                <Button onClick={handleJoke} label={ 'Another one...' } layout={'secundary'} />\r\n              </div>\r\n            </>\r\n          )\r\n      }\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Joke;\r\n","import React from 'react';\r\nimport Svg from '../Svg/Svg';\r\n\r\nimport './Button.style.scss';\r\n\r\ninterface Props {\r\n  label: string;\r\n  layout?: 'secundary' | 'back';\r\n  onClick?: () => {}\r\n}\r\n\r\nconst Button: React.FC<Props> = ({ onClick, label, layout }) => {\r\n  const addClass = !!layout ? `app-button--${layout}` : 'app-button--primary';\r\n\r\n  return (\r\n    <button className={`app-button ${addClass}`} onClick={onClick}>\r\n      { layout === 'back' && <Svg type={ 'back' } alt={ label } /> }\r\n      { label }\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","export default __webpack_public_path__ + \"static/media/chuck-jokes-logo.17fcaaea.svg\";","export default __webpack_public_path__ + \"static/media/back-icon.3bcb4297.svg\";","import React from 'react';\r\n\r\nimport ChuckLogo from '../../assets/chuck-jokes-logo.svg';\r\nimport BackIcon  from '../../assets/back-icon.svg';\r\n\r\ninterface Props {\r\n  type: string;\r\n  alt: string;\r\n}\r\n\r\nconst Intro: React.FC<Props> = ({ type, alt }) => {\r\n  let img = null;\r\n\r\n  switch (type) {\r\n    case 'logo':\r\n      img = ChuckLogo\r\n      break;\r\n\r\n    case 'back':\r\n      img = BackIcon\r\n      break;\r\n  \r\n    default:\r\n      break;\r\n  }\r\n\r\n  if( !img ) return null;\r\n\r\n  return (\r\n    <img\r\n      src={ img } \r\n      alt={ alt }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Intro;\r\n","import React from 'react';\r\n\r\nimport './Wrapper.style.scss';\r\n\r\ninterface Props {\r\n  className?: string\r\n}\r\n\r\nconst Wrapper: React.FC<Props> = ({ children, className }) => {\r\n  const compClass = `app-wrapper ${!!className ? className : ''}`\r\n  \r\n  return (\r\n    <main className={ compClass }>\r\n      { children }\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n"],"sourceRoot":""}